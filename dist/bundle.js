(()=>{"use strict";async function e({ec2:e,jp:r,subnetId:t,vpcId:o}){let i;if(i=await e.describeRouteTables({Filters:[{Name:"association.subnet-id",Values:[t]}]}),0!==i.RouteTables.length)return{rt:i.RouteTables[0]};{o||(i=await e.describeSubnets({Filters:[{Name:"subnet-id",Values:[t]}]}),o=r.query(i,"$..VpcId")[0]),i=await e.describeRouteTables({Filters:[{Name:"vpc-id",Values:[o]}]});let s=r.query(i,"$..Associations[?(@.Main)].RouteTableId")[0];return{rt:r.query(i,`$..RouteTables[?(@.RouteTableId=='${s}')]`)[0]}}}function r({jp:e,res:r,direction:t,protocol:o,port:i}){let s=e.query(r,`$..Entries[?(${"in"==t?"!":""}@.Egress)]`).filter((e=>{if("-1"==e.Protocol)return!0;if(e.Protocol==o){if("1"==o&&e.IcmpTypeCode.Type==i)return!0;if(e.PortRange.From<=i&&e.PortRange.To>=i)return!0}return!1})).sort(((e,r)=>e.RuleNumber-r.RuleNumber)),c={any:!1,rule:[]};for(let e=0;e<s.length;e++){const r=s[e];c.rule.push({allow:"allow"==r.RuleAction,cidr:r.CidrBlock,number:r.RuleNumber})}if(c.rule.length>0){let e=c.rule[0];e.allow&&"0.0.0.0/0"==e.cidr&&(c.any=!0)}return c}async function t({ec2:e,jp:r,direction:t,securityGroupIds:i,protocol:s,port:c}){let n=await e.describeSecurityGroups({GroupIds:i});return{anyTrafficPeer:o({jp:r,res:n,direction:t,protocol:"-1"}),peer:o({jp:r,res:n,direction:t,protocol:s,port:c}),res:n}}function o({jp:e,res:r,direction:t,protocol:o,port:i}){let s={any:!1,cidr:[],prefix:[],sg:[],no:!0},c="-1"==o?"true":`(@.FromPort == -1 || (@.FromPort <= ${i} && (@.ToPort >= ${i} || @.ToPort == -1)))`,n=e.query(r,`$..${"in"==t?"IpPermissions":"IpPermissionsEgress"}[?(@.IpProtocol == '${o}' && ${c})]`);return 0==n.length||(e.query(n,"$..CidrIp").map((e=>{"0.0.0.0/0"==e?s.any=!0:s.cidr.push(e),s.no=!1})),e.query(n,"$..PrefixListId").map((e=>{s.prefix.push(e),s.no=!1})),e.query(n,"$..UserIdGroupPairs").flat().map((e=>{s.sg.push(e),s.no=!1}))),s}const i={vpc:{checkSubnetIgw:async function({ec2:r,jp:t,subnetId:o,vpcId:i}){let s=await e({ec2:r,jp:t,subnetId:o,vpcId:i}),c=t.query(s.rt,"$.Routes[?(@.GatewayId.startsWith('igw-'))].DestinationCidrBlock");return 0!==c.length?c.includes("0.0.0.0/0")?{type:"any"}:{type:"cidr",cidr:c}:{type:"no"}},getSubnetRouteTable:e,checkSubnetNacl:async function({ec2:e,jp:t,subnetId:o,direction:i,protocol:s,port:c}){switch(s){case"tcp":s="6";break;case"udp":s="17";break;case"icmp":s="1"}return r({jp:t,res:await e.describeNetworkAcls({Filters:[{Name:"association.subnet-id",Values:[o]}]}),direction:i,protocol:s,port:c})},checkNacl:r},sg:{checkPort:t,getPeer:o,checkEC2Instances:async function({ec2:e,jp:r,instanceIds:o,direction:i,protocol:s,port:c}){let n,u=await e.describeInstances({InstanceIds:o});return n=r.query(u,"$..SecurityGroups[*].GroupId"),{securityGroupIds:n,...await t({ec2:e,jp:r,direction:i,securityGroupIds:n,protocol:s,port:c})}}}};window.awsomeUtils=i})();